Overview:

The Mastermind Codebreaker is a console-based implementation of the classic code-breaking game "Mastermind". In this game, the player must guess a secret color code generated by the system. The code consists of four colors, chosen from a set of six possible colors. The player is given up to 12 attempts to guess the correct code, with feedback provided after each guess to indicate correct color placements and correct colors in the wrong position.
Features:

    Random Code Generation: The system generates a random sequence of four colors from a predefined set at the start of each game.
    Input Validation: Player input is validated to ensure only valid color names are accepted.
    Feedback System: After each guess, the system provides feedback using:
        "x" for a correct color in the correct position.
        "o" for a correct color in the wrong position.
        "-" for an incorrect color.
    Win/Lose Condition: The game ends when the player correctly guesses the entire sequence or when they exhaust all 12 attempts.

How to Play:

    Starting the Game: Run the Game class, which will automatically start the simulation.
    Input Guess: The player is prompted to enter their guess of four colors. The colors should be typed in uppercase and separated by spaces.
    Receive Feedback: After each guess, the system will provide feedback on the accuracy of the guess.
    Winning: If the player correctly identifies the color sequence within 12 tries, they win the game.
    Losing: If the player fails to guess the correct sequence after 12 attempts, the system wins.

Example Gameplay:

    System: [Code: RED GREEN BLUE YELLOW]
    Player: RED BLUE YELLOW GREEN
    System Feedback:
        x o - -
        Explanation: 1 color is in the correct position (x), 1 color is correct but in the wrong position (o), and 2 colors are incorrect (-).

Installation:

    Clone the Repository: Clone the repository to your local machine.
    Compile and Run: Compile the Game.java file and run it using any Java development environment or through the command line.

Dependencies:

    Java Development Kit (JDK)

Future Improvements:

    GUI Version: Implement a graphical user interface for better user experience.
    Multiple Difficulty Levels: Introduce varying difficulty levels by increasing the number of colors or code length.

This game is a fun way to test logical thinking and pattern recognition skills, simulating the classic board game experience in a digital format.
