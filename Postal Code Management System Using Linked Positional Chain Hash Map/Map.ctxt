#BlueJ class context
comment0.target=Map
comment0.text=\r\n\ An\ interface\ for\ an\ associative\ map\ which\ binds\ a\ key\ uniquely\ to\ a\ value.\r\n\ This\ interface\ is\ a\ simplified\ version\ of\ java.util.Map.\r\n
comment1.params=
comment1.target=int\ size()
comment1.text=\r\n\ Returns\ the\ number\ of\ entries\ in\ the\ map.\r\n\ @return\ number\ of\ entries\ in\ the\ map\r\n
comment2.params=
comment2.target=boolean\ isEmpty()
comment2.text=\r\n\ Tests\ whether\ the\ map\ is\ empty.\r\n\ @return\ true\ if\ the\ map\ is\ empty,\ false\ otherwise\r\n
comment3.params=key
comment3.target=java.lang.Object\ get(java.lang.Object)
comment3.text=\r\n\ Returns\ the\ value\ associated\ with\ the\ specified\ key,\ or\ null\ if\ no\ such\ entry\ exists.\r\n\ @param\ key\ \ the\ key\ whose\ associated\ value\ is\ to\ be\ returned\r\n\ @return\ the\ associated\ value,\ or\ null\ if\ no\ such\ entry\ exists\r\n
comment4.params=key\ value
comment4.target=java.lang.Object\ put(java.lang.Object,\ java.lang.Object)
comment4.text=\r\n\ Associates\ the\ given\ value\ with\ the\ given\ key.\ If\ an\ entry\ with\r\n\ the\ key\ was\ already\ in\ the\ map,\ this\ replaced\ the\ previous\ value\r\n\ with\ the\ new\ one\ and\ returns\ the\ old\ value.\ Otherwise,\ a\ new\r\n\ entry\ is\ added\ and\ null\ is\ returned.\r\n\ @param\ key\ \ \ \ key\ with\ which\ the\ specified\ value\ is\ to\ be\ associated\r\n\ @param\ value\ \ value\ to\ be\ associated\ with\ the\ specified\ key\r\n\ @return\ the\ previous\ value\ associated\ with\ the\ key\ (or\ null,\ if\ no\ such\ entry)\r\n
comment5.params=key
comment5.target=java.lang.Object\ remove(java.lang.Object)
comment5.text=\r\n\ Removes\ the\ entry\ with\ the\ specified\ key,\ if\ present,\ and\ returns\r\n\ its\ associated\ value.\ Otherwise\ does\ nothing\ and\ returns\ null.\r\n\ @param\ key\ \ the\ key\ whose\ entry\ is\ to\ be\ removed\ from\ the\ map\r\n\ @return\ the\ previous\ value\ associated\ with\ the\ removed\ key,\ or\ null\ if\ no\ such\ entry\ exists\r\n
comment6.params=
comment6.target=java.lang.Iterable\ keySet()
comment6.text=\r\n\ Returns\ an\ iterable\ collection\ of\ the\ keys\ contained\ in\ the\ map.\r\n\r\n\ @return\ iterable\ collection\ of\ the\ map's\ keys\r\n
comment7.params=
comment7.target=java.lang.Iterable\ values()
comment7.text=\r\n\ Returns\ an\ iterable\ collection\ of\ the\ values\ contained\ in\ the\ map.\r\n\ Note\ that\ the\ same\ value\ will\ be\ given\ multiple\ times\ in\ the\ result\r\n\ if\ it\ is\ associated\ with\ multiple\ keys.\r\n\r\n\ @return\ iterable\ collection\ of\ the\ map's\ values\r\n
comment8.params=
comment8.target=java.lang.Iterable\ entrySet()
comment8.text=\r\n\ Returns\ an\ iterable\ collection\ of\ all\ key-value\ entries\ of\ the\ map.\r\n\r\n\ @return\ iterable\ collection\ of\ the\ map's\ entries\r\n
numComments=9
